version: '3.5'
services:
  nginx:
    restart: always
    build:
      context: ../nginx
    ports:
      - "81:80"
    depends_on:
      - backend
      - adminpanel
      - adminer
    volumes:
      - ../nginx/logs:/var/log/nginx
      - ../nginx/access.d:/etc/nginx/access.d

  backend:
    build:
      context: ../backend
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; /start-reload.sh'
    ports:
      - "8082:80"
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ../backend/app:/app

  adminpanel:
    build:
      context: ../adminpage
      dockerfile: Dockerfile
#   Wait for postgres to startup before running server
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python manage.py runserver 0.0.0.0:8000'
    restart: always
    volumes:
      - ../adminpage:/src
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DOCKER: 1

  db:
    image: db
    build:
      context: ../backend
      dockerfile: Dockerfile.db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env


  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "8081:8080"


volumes:
  db-data: