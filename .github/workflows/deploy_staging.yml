name: Staging deploy
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Tests"]
    branches: [master]
    types:
      - completed
jobs:
  deploy:
    name: Deploy to staging server
    runs-on: self-hosted
    environment:
      name: stage
      url: https://stage.sport.innopolis.university
    steps:
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set env
        run: echo "IMAGE=${{ steps.meta.outputs.tags }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install keys
        run: |
          tee ~/.ssh/id_rsa << END
          ${{ secrets.PRIVATE_KEY }}
          END

          tee ~/.ssh/id_rsa.pub << END
          ${{ secrets.PUBLIC_KEY }}
          END

          export DOCKER_HOST=ssh://${{ secrets.USER }}@${{ secrets.HOST }}

      - name: Tear down existing services
        run: docker-compose down

      - name: Build and up services
        run: docker-compose up -d --build



#      - name: Deploy via SSH
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          script: |
#            cd ${{ secrets.REPOSITORY_PATH }}/compose
#            git reset --hard
#            git checkout ${GITHUB_REF}
#            git pull
#            docker-compose -f docker-compose-prod.yml build
#            docker-compose -f docker-compose-prod.yml down
#            docker-compose -f docker-compose-prod.yml up -d
#            docker-compose -f docker-compose-prod.yml exec -T adminpanel bash -c "while !</dev/tcp/db/5432; do sleep 1; done;"
#            docker-compose -f docker-compose-prod.yml exec -T adminpanel bash -c './manage.py collectstatic --noinput && ./manage.py migrate'
#            docker-compose -f docker-compose-prod.yml build nginx
#            docker-compose -f docker-compose-prod.yml restart nginx
